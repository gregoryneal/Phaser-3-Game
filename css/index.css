/* begin loader style */

@keyframes rotation {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

/* Color pallete
  - #463191 purple
  - #E72696 pink
  - #FACF31 yellow
  - #F99B1D orange
  - #5EDBA5 teal
*/

/* define the fonts */
@font-face {
  font-family: 'Morohashi';
  src: url(/fonts/Morohashi.ttf) format('truetype');
}

@font-face {
  font-family: 'Nasa21';
  src: url(/fonts/Nasa21.ttf) format('truetype');
}

@font-face {
  font-family: 'OEGothicPixel';
  src: url(/fonts/OldEnglishGothicPixelRegular-ow2Bo.ttf) format('truetype');
}

@font-face {
  font-family: 'PixelScript';
  src: url(/fonts/PixelScriptRegular-4B83W.ttf) format('truetype');
}

#loader-wrapper {
  background-color: #000000;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 999;
  width: 100%;
  height: 100%;
  text-align: center;
}

.loader {
  width: 40px;
  height: 40px;
  border: 5px solid #ffffff;
  border-bottom-color: transparent;
  border-radius: 50%;
  margin-top: calc(50vh - 20px);
  display: inline-block;
  box-sizing: border-box;
  -webkit-animation: rotation 1s linear infinite;
  animation: rotation 1s linear infinite;
}

/* end loader style */

/* begin body style */

body {
  background-color: #000000;
  overflow: hidden;
}

/* end body style */

/* begin glitch text style */

.glitch {
  position: relative;
  color: white;
  font-size: 1em;
  letter-spacing: 0.5em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
}

.glitch::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 #ff00c1;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}

.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}

/* Creates an animation with 20 steps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(70px, 9999px, 76px, 0);
    transform: skew(0.54deg);
  }

  5% {
    clip: rect(38px, 9999px, 59px, 0);
    transform: skew(0.62deg);
  }

  10% {
    clip: rect(20px, 9999px, 56px, 0);
    transform: skew(0.67deg);
  }

  15% {
    clip: rect(98px, 9999px, 1px, 0);
    transform: skew(0.51deg);
  }

  20% {
    clip: rect(47px, 9999px, 81px, 0);
    transform: skew(0.5deg);
  }

  25% {
    clip: rect(37px, 9999px, 53px, 0);
    transform: skew(0.63deg);
  }

  30% {
    clip: rect(11px, 9999px, 28px, 0);
    transform: skew(0.43deg);
  }

  35% {
    clip: rect(26px, 9999px, 10px, 0);
    transform: skew(0.6deg);
  }

  40% {
    clip: rect(45px, 9999px, 42px, 0);
    transform: skew(0.62deg);
  }

  45% {
    clip: rect(2px, 9999px, 38px, 0);
    transform: skew(0.87deg);
  }

  50% {
    clip: rect(57px, 9999px, 51px, 0);
    transform: skew(0.11deg);
  }

  55% {
    clip: rect(11px, 9999px, 25px, 0);
    transform: skew(0.14deg);
  }

  60% {
    clip: rect(62px, 9999px, 46px, 0);
    transform: skew(0.27deg);
  }

  65% {
    clip: rect(17px, 9999px, 95px, 0);
    transform: skew(0.36deg);
  }

  70% {
    clip: rect(37px, 9999px, 52px, 0);
    transform: skew(0.33deg);
  }

  75% {
    clip: rect(53px, 9999px, 23px, 0);
    transform: skew(0.13deg);
  }

  80% {
    clip: rect(90px, 9999px, 36px, 0);
    transform: skew(0.37deg);
  }

  85% {
    clip: rect(26px, 9999px, 78px, 0);
    transform: skew(0.85deg);
  }

  90% {
    clip: rect(13px, 9999px, 72px, 0);
    transform: skew(0.36deg);
  }

  95% {
    clip: rect(34px, 9999px, 8px, 0);
    transform: skew(0.15deg);
  }

  100% {
    clip: rect(11px, 9999px, 62px, 0);
    transform: skew(0.91deg);
  }
}

@keyframes glitch-anim2 {
  0% {
    clip: rect(4px, 9999px, 96px, 0);
    transform: skew(0.4deg);
  }

  5% {
    clip: rect(74px, 9999px, 32px, 0);
    transform: skew(0.74deg);
  }

  10% {
    clip: rect(15px, 9999px, 56px, 0);
    transform: skew(0.85deg);
  }

  15% {
    clip: rect(38px, 9999px, 40px, 0);
    transform: skew(0.12deg);
  }

  20% {
    clip: rect(13px, 9999px, 55px, 0);
    transform: skew(0.32deg);
  }

  25% {
    clip: rect(87px, 9999px, 49px, 0);
    transform: skew(0.5deg);
  }

  30% {
    clip: rect(55px, 9999px, 73px, 0);
    transform: skew(0.18deg);
  }

  35% {
    clip: rect(74px, 9999px, 49px, 0);
    transform: skew(0.01deg);
  }

  40% {
    clip: rect(71px, 9999px, 82px, 0);
    transform: skew(0.75deg);
  }

  45% {
    clip: rect(90px, 9999px, 52px, 0);
    transform: skew(0.73deg);
  }

  50% {
    clip: rect(64px, 9999px, 2px, 0);
    transform: skew(0.87deg);
  }

  55% {
    clip: rect(71px, 9999px, 11px, 0);
    transform: skew(0.94deg);
  }

  60% {
    clip: rect(18px, 9999px, 64px, 0);
    transform: skew(1deg);
  }

  65% {
    clip: rect(11px, 9999px, 65px, 0);
    transform: skew(0.94deg);
  }

  70% {
    clip: rect(92px, 9999px, 1px, 0);
    transform: skew(0.2deg);
  }

  75% {
    clip: rect(24px, 9999px, 3px, 0);
    transform: skew(0.13deg);
  }

  80% {
    clip: rect(21px, 9999px, 45px, 0);
    transform: skew(0.94deg);
  }

  85% {
    clip: rect(10px, 9999px, 43px, 0);
    transform: skew(0.63deg);
  }

  90% {
    clip: rect(57px, 9999px, 17px, 0);
    transform: skew(0.74deg);
  }

  95% {
    clip: rect(17px, 9999px, 21px, 0);
    transform: skew(0.38deg);
  }

  100% {
    clip: rect(19px, 9999px, 60px, 0);
    transform: skew(0.71deg);
  }
}

@keyframes glitch-skew {
  0% {
    transform: skew(3deg);
  }

  10% {
    transform: skew(-4deg);
  }

  20% {
    transform: skew(5deg);
  }

  30% {
    transform: skew(-4deg);
  }

  40% {
    transform: skew(-2deg);
  }

  50% {
    transform: skew(3deg);
  }

  60% {
    transform: skew(-3deg);
  }

  70% {
    transform: skew(-2deg);
  }

  80% {
    transform: skew(1deg);
  }

  90% {
    transform: skew(2deg);
  }

  100% {
    transform: skew(-1deg);
  }
}

/* end glitch text style */

/* fade animations */

.fade-in {
  opacity: 1;
  animation-name: fadeInOpacity;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
  animation-duration: 2s;
  animation-fill-mode: forwards;
}

.fade-out {
  opacity: 0;
  animation-name: fadeOutOpacity;
  animation-iteration-count: 1;
  animation-timing-function: ease-in;
  animation-duration: 2s;
  animation-fill-mode: forwards;
}

@keyframes fadeInOpacity {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes fadeOutOpacity {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}


/* end fade animations */

.hoverpointer:hover {
  cursor: pointer;
}

#content-wrapper {
  z-index: 1000;
  display: grid;
  grid-template-columns: auto;
  grid-template-rows: auto;
  gap: 10px;
  row-gap: 40px;

  justify-items: center;
  align-items: center;

  justify-content: center;
  align-content: center;

  height: 100vh;
}

.nounderline {
  text-decoration: none;
  user-select: none;
  -moz-user-select: none;
}

#exit-music-button {
  opacity: 0;

  position: fixed;
  top: 20px;
  right: 40px;
  color: #ffffff;
}

/* underline hover animation style */

.hover-underline-animation {
  display: inline-block;
  position: relative;
}

.hover-underline-animation::after {
  content: '';
  position: absolute;
  width: 100%;
  transform: scaleX(0);
  height: 2px;
  bottom: 0;
  left: 0;
  transform-origin: bottom right;
  transition: transform 0.25s ease-out;
}

.hover-underline-animation:hover::after {
  transform: scaleX(1);
  transform-origin: bottom left;
}

/* end underline hover animation */

/* game canvas styling */

/* make the wrapper fixed fullscreen */
#game-wrapper {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  justify-content: center;
  align-items: center;
}

canvas {
  margin: 0 !important;
  padding: 0 !important;
}

/* end game canvas styling */